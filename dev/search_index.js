var documenterSearchIndex = {"docs":
[{"location":"#HPGL.jl","page":"API Documentation","title":"HPGL.jl","text":"","category":"section"},{"location":"","page":"API Documentation","title":"API Documentation","text":"Modules = [HPGL]\nPrivate = false","category":"page"},{"location":"#HPGL.micmeter-Tuple{Any}","page":"API Documentation","title":"HPGL.micmeter","text":"micmeter(plotter_port; x_offset=0, y_offset=0, xtick=100, ytick=1000, xmax=10_000,\n         logfile)\n\nContinuously read from the default audio input and send commands to plot the per-buffer microphone level to plotter_port (via send_plotter_cmds).\n\n\n\n\n\n","category":"method"},{"location":"#HPGL.send_plotter_cmd-Tuple{Any, String}","page":"API Documentation","title":"HPGL.send_plotter_cmd","text":"send_plotter_cmd(port, cmd::String; safety_up=true, logfile)\n\nSend single cmd to plotter serial port port. If safety_up is true, any pen down/pen move instructions are followed by a \"pen up command\". cmd will additionally be appended to logfile path, unless logfile is missing.\n\n\n\n\n\n","category":"method"},{"location":"#HPGL.send_plotter_cmds-Tuple{Any, Any}","page":"API Documentation","title":"HPGL.send_plotter_cmds","text":"send_plotter_cmds(port, cmds; rate_limit_duration_sec=0.2, kwargs...)\n\nSend a series of commands via send_plotter_cmd, with a rate_limit_duration_sec pause between each function.\n\n\n\n\n\n","category":"method"},{"location":"#Non-exported-functions-and-types","page":"API Documentation","title":"Non-exported functions and types","text":"","category":"section"},{"location":"","page":"API Documentation","title":"API Documentation","text":"Modules = [HPGL]\nPublic = false","category":"page"}]
}
